{"version":3,"sources":["webpack://shopcarts-ui/./src/Components/Buttons/index.tsx","webpack://shopcarts-ui/./src/Components/Cart/CartCard.tsx","webpack://shopcarts-ui/./src/Components/Cart/Checkout.tsx","webpack://shopcarts-ui/./src/Components/Cart/UserInfo.tsx","webpack://shopcarts-ui/./src/pages/cart.tsx","webpack://shopcarts-ui/./src/lib/helper/index.ts"],"names":["ActionButton","title","className","handleClick","color","id","onClick","SmallActionButton","LinkButton","href","Link","to","item","handleUpdateItem","handleDeleteItem","useState","quantity","setQuantity","src","image","alt","product","link","price","toFixed","productID","type","value","onChange","e","parseInt","target","items","allItems","handleCheckout","formattedItems","map","product_id","key","reduce","accumulator","currentValue","navigate","IDInput","currentID","handleSubmit","handleCancel","userID","setUserID","showEdit","setShowEdit","useUser","setShopCart","newID","getShopcart","newCart","console","log","data","shopCart","nodes","forEach","node","frontmatter","featuredImage","childImageSharp","fluid","slug","formatMarkdownItems","allMarkdownRemark","updateItem","cart","deleteItem","clearCart","RenderCart","Layout"],"mappings":"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","file":"component---src-pages-cart-tsx-dc25662d3acefb9da691.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst ActionButton = ({\n  title,\n  className = \"\",\n  handleClick,\n  color,\n  id = \"\",\n}) => {\n  return (\n    <div className=\"rounded-full shadow\">\n      <button\n        id={`shopcarts_${id}-btn`}\n        onClick={handleClick}\n        className={`w-full flex items-center justify-center px-8 py-2 border border-transparent text-base font-medium rounded-full text-white ${color} md:py-2 md:text-lg md:px-10 ${className}`}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\n\nconst SmallActionButton = ({\n  title,\n  className = \"\",\n  handleClick,\n  color,\n  id = \"\",\n}) => {\n  return (\n    <div className=\"rounded-full shadow\">\n      <button\n        id={`shopcarts_${id}-btn`}\n        onClick={handleClick}\n        className={`w-full flex items-center justify-center px-4 py-1 border border-transparent text-base font-medium rounded-full text-white ${color} md:px-3 md:py-1 md:text-md ${className}`}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\n\nconst LinkButton = ({ title, className = \"\", href, color }) => {\n  return (\n    <div className=\"rounded-full shadow\">\n      <Link\n        to={href}\n        className={`w-full flex items-center justify-center px-8 py-2 border border-transparent text-base font-medium rounded-full text-white ${color} md:py-2 md:text-lg md:px-10 ${className}`}\n      >\n        {title}\n      </Link>\n    </div>\n  );\n};\n\nexport { ActionButton, SmallActionButton, LinkButton };\n","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { SmallActionButton } from \"../Buttons\";\n\nconst CartCard = ({ item, handleUpdateItem, handleDeleteItem }) => {\n  const [quantity, setQuantity] = useState<number>(item.quantity);\n  return (\n    <div className=\"border-2 border-green-200 rounded-xl mb-5 hover:shadow-lg hover:cursor-pointer\">\n      <div className=\"grid\">\n        <div className=\"row-start-1 row-end-2 col-start-1 col-end-3 sm:row-start-1 sm:row-end-3 sm:col-start-1 sm:col-end-3 w-40 h-40 p-3\">\n          <img\n            className=\"w-full h-full object-contain rounded-xl\"\n            src={item.image}\n            alt={item.product}\n          ></img>\n        </div>\n        <div className=\"row-start-1 row-end-2 col-start-3 col-end-7 sm:row-start-1 sm:row-end-2 sm:col-start-3 sm:col-end-7 p-5 flex-1\">\n          <Link to={item.link}>\n            <h1 className=\"text-2xl font-bold\">{item.product}</h1>\n            <h1 className=\"text-2xl my-1\">\n              ${item.price ? item.price.toFixed(2) : \"0.00\"}\n            </h1>\n            <h1 className=\"text-2xl my-1\">Quantity: {item.quantity}</h1>\n          </Link>\n        </div>\n        <div className=\"row-start-2 row-end-3 col-start-1 col-end-7 sm:row-start-2 sm:row-end-3 sm:col-start-3 sm:col-end-5 px-5 flex flex-row justify-between\">\n          <div className=\"my-auto\">\n            <SmallActionButton\n              id=\"remove\"\n              title=\"Remove\"\n              handleClick={() => {\n                handleDeleteItem(item.productID);\n              }}\n              color=\"bg-red-400 hover:bg-red-500\"\n            />\n          </div>\n        </div>\n        <div className=\"row-start-3 row-end-4 col-start-1 col-end-7 sm:row-start-2 sm:row-end-3 sm:col-start-5 sm:col-end-7 px-5 my-6 flex flex-row\">\n          <div className=\"my-auto\">\n            <SmallActionButton\n              id=\"update-quantity\"\n              title=\"Update quantity\"\n              handleClick={() => {\n                handleUpdateItem(item.productID, item.price, quantity);\n              }}\n              color=\"bg-green-400 hover:bg-green-500\"\n            />\n          </div>\n          <input\n            id=\"shopcarts_quantity-input\"\n            className=\"outline-none w-16 mx-5 border-b-4 border-black text-4xl text-center font-bold\"\n            type=\"number\"\n            value={quantity}\n            onChange={(e) => {\n              let value = parseInt(e.target.value);\n              if (value > 0) setQuantity(value);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartCard;\n","import { navigate } from \"gatsby\";\nimport React from \"react\";\nimport { ActionButton } from \"../Buttons\";\n\nconst Checkout = ({ items = [], allItems, handleCheckout }) => {\n  const quantityReducer = (accumulator, currentValue) => {\n    return accumulator + currentValue.quantity;\n  };\n  const priceReducer = (accumulator, currentValue) => {\n    return accumulator + currentValue.price * currentValue.quantity;\n  };\n  const formattedItems = items.map((item) => {\n    return { ...allItems[item.product_id], quantity: item.quantity };\n  });\n  return (\n    <div className=\"lg:w-4/12 lg:m-5\">\n      <div className=\"border-2 border-green-200 p-5 rounded-xl\">\n        <h1 className=\"text-green-500 text-4xl font-bold\">Checkout</h1>\n        <h1 className=\"mt-5 text-green-500 text-2xl font-bold\">Items</h1>\n        <ul className=\"max-w-sm\">\n          {formattedItems.map((item) => {\n            return (\n              <li\n                key={item.productID}\n                className=\"flex flex-row justify-between\"\n              >\n                <h1 className=\"text-lg\">- {item.product}</h1>\n                <h1 className=\"text-lg\">\n                  ${item.price ? item.price.toFixed(2) : \"0.00\"} x\n                  {item.quantity}\n                </h1>\n              </li>\n            );\n          })}\n        </ul>\n        <h1 className=\"mt-5 text-green-500 text-2xl font-bold\">Total</h1>\n        <h1 className=\"text-lg font-bold\">\n          {items.reduce(quantityReducer, 0)} Items\n        </h1>\n        <h1 className=\"text-lg font-bold\">\n          Subtotal: ${items.reduce(priceReducer, 0).toFixed(2)}\n        </h1>\n        <ActionButton\n          id=\"checkout\"\n          className=\"mt-5\"\n          title=\"Checkout\"\n          handleClick={() => {\n            handleCheckout();\n            navigate(\"/thank-you\");\n          }}\n          color=\"bg-green-400 hover:bg-green-500\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","import React, { useState } from \"react\";\n\nimport { useUser } from \"../../hooks/useUser\";\nimport { getShopcart } from \"../../lib/api\";\nimport { SmallActionButton } from \"../Buttons\";\n\nconst IDInput = ({ currentID, handleSubmit, handleCancel }) => {\n  const [userID, setUserID] = useState(currentID);\n  return (\n    <div className=\"flex flex-row\">\n      <input\n        id=\"shopcarts_id-input\"\n        className=\"outline-none w-24 border-b-4 border-black text-2xl text-center font-bold\"\n        type=\"number\"\n        value={userID}\n        onChange={(e) => {\n          let value = parseInt(e.target.value);\n          if (value > 0) setUserID(value);\n        }}\n      />\n      <div className=\"mx-5\">\n        <SmallActionButton\n          id=\"save\"\n          title=\"Save\"\n          handleClick={() => {\n            handleSubmit(userID);\n          }}\n          color=\"bg-green-400 hover:bg-green-500\"\n        />\n      </div>\n      <div>\n        <SmallActionButton\n          id=\"cancel\"\n          title=\"Cancel\"\n          handleClick={() => {\n            handleCancel();\n          }}\n          color=\"bg-red-400 hover:bg-red-500\"\n        />\n      </div>\n    </div>\n  );\n};\n\nconst UserInfo = () => {\n  const [showEdit, setShowEdit] = useState(false);\n  const { userID, setUserID, setShopCart } = useUser();\n\n  async function handleSubmit(newID) {\n    try {\n      setUserID(newID);\n      const newCart = await getShopcart(newID);\n      setShopCart(newCart);\n      setShowEdit(false);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleCancel() {\n    setShowEdit(false);\n  }\n\n  return (\n    <div className=\"ml-5 mb-5 flex flex-row flex-nowrap\">\n      <h1 className=\"text-2xl font-bold\">User #</h1>\n      {showEdit ? (\n        <IDInput\n          currentID={userID}\n          handleSubmit={handleSubmit}\n          handleCancel={handleCancel}\n        />\n      ) : (\n        <button id=\"shopcarts_edit-btn\" onClick={() => setShowEdit(true)}>\n          <h1 id=\"shopcarts_user_id\" className=\"text-2xl font-bold\">\n            {userID}\n          </h1>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UserInfo;\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport { useUser } from \"../hooks/useUser\";\nimport { formatMarkdownItems } from \"../lib/helper\";\nimport { deleteItem, updateItem, clearCart } from \"../lib/api\";\n\nimport Layout from \"../Components/Layout\";\nimport CartCard from \"../Components/Cart/CartCard\";\nimport Checkout from \"../Components/Cart/Checkout\";\nimport UserInfo from \"../Components/Cart/UserInfo\";\n\nconst Cart = ({ data }) => {\n  const { userID, setShopCart, shopCart } = useUser();\n  const { allMarkdownRemark } = data;\n  const allItems = formatMarkdownItems(allMarkdownRemark.nodes);\n\n  async function handleUpdateItem(productID, price, quantity) {\n    try {\n      const cart = await updateItem(userID, productID, price, quantity);\n      setShopCart(cart);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleDeleteItem(productID) {\n    try {\n      const cart = await deleteItem(userID, productID);\n      setShopCart(cart);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleCheckout() {\n    try {\n      const cart = await clearCart(userID);\n      setShopCart(cart);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const RenderCart = ({ items = [], allItems }) => {\n    return (\n      <div id=\"shopcarts_items\" className=\"lg:w-8/12 lg:px-5\">\n        {items.map((item) => (\n          <CartCard\n            key={item.product_id}\n            item={{ ...allItems[item.product_id], quantity: item.quantity }}\n            handleUpdateItem={handleUpdateItem}\n            handleDeleteItem={handleDeleteItem}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <Layout title=\"Cart | Avoman\">\n      <div className=\"max-w-6xl mx-auto px-5 mb-20\">\n        <h1 className=\"text-green-500 text-6xl font-bold\">Your cart</h1>\n        <UserInfo />\n        <div className=\"lg:flex flex-row w-full\">\n          <RenderCart items={shopCart} allItems={allItems} />\n          <Checkout\n            items={shopCart}\n            allItems={allItems}\n            handleCheckout={handleCheckout}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Cart;\n\nexport const pageQuery = graphql`\n  query productPhotos {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          productID\n          product\n          price\n          slug\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export function formatMarkdownItems(nodes) {\n  const allItems = {};\n  nodes.forEach((node) => {\n    const { frontmatter } = node;\n    allItems[`${frontmatter.productID}`] = {\n      productID: frontmatter.productID,\n      product: frontmatter.product,\n      price: frontmatter.price,\n      image: frontmatter.featuredImage.childImageSharp.fluid.src,\n      link: frontmatter.slug,\n    };\n  });\n  return allItems;\n}\n"],"sourceRoot":""}