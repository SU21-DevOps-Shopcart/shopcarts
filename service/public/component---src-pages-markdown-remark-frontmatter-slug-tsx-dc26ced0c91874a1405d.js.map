{"version":3,"sources":["webpack://shopcarts-ui/./src/Components/Buttons/index.tsx","webpack://shopcarts-ui/./src/pages/{MarkdownRemark.frontmatter__slug}.tsx"],"names":["ActionButton","title","className","handleClick","color","id","onClick","SmallActionButton","LinkButton","href","Link","to","Template","data","useState","recentlyAdded","setRecentlyAdded","quantity","setQuantity","useUser","userID","setShopCart","markdownRemark","frontmatter","html","product","src","featuredImage","childImageSharp","fluid","alt","dangerouslySetInnerHTML","__html","price","toFixed","value","addItem","productID","updatedCart","console","log"],"mappings":"0NAGMA,EAAe,SAAC,GAMhB,IALJC,EAKI,EALJA,MAKI,IAJJC,iBAII,MAJQ,GAIR,EAHJC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MAEI,IADJC,UACI,MADC,GACD,EACJ,OACE,uBAAKH,UAAU,uBACb,0BACEG,GAAE,aAAeA,EAAf,OACFC,QAASH,EACTD,UAAS,6HAA+HE,EAA/H,gCAAoKF,GAE5KD,KAMHM,EAAoB,SAAC,GAMrB,IALJN,EAKI,EALJA,MAKI,IAJJC,iBAII,MAJQ,GAIR,EAHJC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MAEI,IADJC,UACI,MADC,GACD,EACJ,OACE,uBAAKH,UAAU,uBACb,0BACEG,GAAE,aAAeA,EAAf,OACFC,QAASH,EACTD,UAAS,6HAA+HE,EAA/H,+BAAmKF,GAE3KD,KAMHO,EAAa,SAAC,GAA2C,IAAzCP,EAAyC,EAAzCA,MAAyC,IAAlCC,iBAAkC,MAAtB,GAAsB,EAAlBO,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,MACjD,OACE,uBAAKF,UAAU,uBACb,gBAAC,EAAAQ,KAAD,CACEC,GAAIF,EACJP,UAAS,6HAA+HE,EAA/H,gCAAoKF,GAE5KD,M,kKCvCM,SAASW,EAAT,GAEZ,IADDC,EACC,EADDA,KAEA,GAA0CC,eAAS,GAA5CC,EAAP,KAAsBC,EAAtB,KACA,GAAgCF,cAAS,GAAlCG,EAAP,KAAiBC,EAAjB,KACA,GAAgCC,UAAxBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YACRC,EAAmBT,EAAnBS,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KAWrB,OACE,gBAAC,IAAD,CAAQvB,MAAUsB,EAAYE,QAAjB,aACX,uBAAKvB,UAAU,iCACb,uBAAKA,UAAU,oBACb,uBAAKA,UAAU,UACb,uBAAKA,UAAU,iBACb,uBACEwB,IAAKH,EAAYI,cAAcC,gBAAgBC,MAAMH,IACrDI,IAAKP,EAAYE,YAIvB,uBAAKvB,UAAU,qBACb,uBACEA,UAAU,eACV6B,wBAAyB,CAAEC,OAAQR,KAErC,sBAAItB,UAAU,+BAAd,IACIqB,EAAYU,MAAMC,QAAQ,GAD9B,OAGA,uBAAKhC,UAAU,oDACb,gBAAC,KAAD,CACEG,GAAG,YACHD,MAAM,kCACNF,UAAU,WACVD,MAAM,IACNE,YAnCY,WACxBe,GAAY,SAACiB,GAAD,OAAYA,EAAQ,EAAIA,EAAQ,EAAIA,KAC5CpB,GAAeC,GAAiB,MAmC1B,sBAAIX,GAAG,qBAAqBH,UAAU,sBACnCe,GAEH,gBAAC,KAAD,CACEZ,GAAG,YACHD,MAAM,kCACNF,UAAU,WACVD,MAAM,IACNE,YAzCY,WACxBe,GAAY,SAACiB,GAAD,OAAWA,EAAQ,KAC3BpB,GAAeC,GAAiB,OA0C5B,uBAAKd,UAAU,eACb,gBAAC,KAAD,CACEG,GAAG,MACHD,MAAM,kCACNH,MAAOc,EAAgB,SAAW,cAClCZ,aAAW,iBAAE,8GAEiBiC,QACxBhB,EACAG,EAAYc,UACZd,EAAYU,MACZhB,GANO,QAEHqB,EAFG,UASPjB,EAAYiB,GACZtB,GAAiB,IAVV,gDAaTuB,QAAQC,IAAR,MAbS","file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-dc26ced0c91874a1405d.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst ActionButton = ({\n  title,\n  className = \"\",\n  handleClick,\n  color,\n  id = \"\",\n}) => {\n  return (\n    <div className=\"rounded-full shadow\">\n      <button\n        id={`shopcarts_${id}-btn`}\n        onClick={handleClick}\n        className={`w-full flex items-center justify-center px-8 py-2 border border-transparent text-base font-medium rounded-full text-white ${color} md:py-2 md:text-lg md:px-10 ${className}`}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\n\nconst SmallActionButton = ({\n  title,\n  className = \"\",\n  handleClick,\n  color,\n  id = \"\",\n}) => {\n  return (\n    <div className=\"rounded-full shadow\">\n      <button\n        id={`shopcarts_${id}-btn`}\n        onClick={handleClick}\n        className={`w-full flex items-center justify-center px-4 py-1 border border-transparent text-base font-medium rounded-full text-white ${color} md:px-3 md:py-1 md:text-md ${className}`}\n      >\n        {title}\n      </button>\n    </div>\n  );\n};\n\nconst LinkButton = ({ title, className = \"\", href, color }) => {\n  return (\n    <div className=\"rounded-full shadow\">\n      <Link\n        to={href}\n        className={`w-full flex items-center justify-center px-8 py-2 border border-transparent text-base font-medium rounded-full text-white ${color} md:py-2 md:text-lg md:px-10 ${className}`}\n      >\n        {title}\n      </Link>\n    </div>\n  );\n};\n\nexport { ActionButton, SmallActionButton, LinkButton };\n","import React, { useState } from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../Components/Layout\";\nimport { ActionButton } from \"../Components/Buttons\";\nimport { addItem } from \"../lib/api\";\nimport { useUser } from \"../hooks/useUser\";\n\n// to /shopcarts/<shopcartid>\n//  -d {product_id: \"asdf\", shopcart_id: \"asdf\", quantity: \"asdf\", price: \"asdf\"}\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const [recentlyAdded, setRecentlyAdded] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n  const { userID, setShopCart } = useUser();\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n\n  const decrementQuantity = () => {\n    setQuantity((value) => (value > 1 ? value - 1 : value));\n    if (recentlyAdded) setRecentlyAdded(false);\n  };\n  const incrementQuantity = () => {\n    setQuantity((value) => value + 1);\n    if (recentlyAdded) setRecentlyAdded(false);\n  };\n\n  return (\n    <Layout title={`${frontmatter.product} | Avoman`}>\n      <div className=\"pt-10 px-10 max-w-4xl mx-auto\">\n        <div className=\"sm:flex flex-row\">\n          <div className=\"flex-1\">\n            <div className=\"max-w-sm px-5\">\n              <img\n                src={frontmatter.featuredImage.childImageSharp.fluid.src}\n                alt={frontmatter.product}\n              />\n            </div>\n          </div>\n          <div className=\"flex-1 px-5 mt-10\">\n            <div\n              className=\"item-content\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            <h1 className=\"text-4xl font-semibold mt-5\">\n              ${frontmatter.price.toFixed(2)}/ea\n            </h1>\n            <div className=\"my-10 flex flex-row items-center justify-between\">\n              <ActionButton\n                id=\"decrement\"\n                color=\"bg-green-500 hover:bg-green-600\"\n                className=\"text-4xl\"\n                title=\"-\"\n                handleClick={decrementQuantity}\n              />\n              <h1 id=\"shopcarts_quantity\" className=\"text-4xl font-bold\">\n                {quantity}\n              </h1>\n              <ActionButton\n                id=\"increment\"\n                color=\"bg-green-500 hover:bg-green-600\"\n                className=\"text-4xl\"\n                title=\"+\"\n                handleClick={incrementQuantity}\n              />\n            </div>\n            <div className=\"mt-10 mb-20\">\n              <ActionButton\n                id=\"add\"\n                color=\"bg-green-500 hover:bg-green-600\"\n                title={recentlyAdded ? \"Added!\" : \"Add to cart\"}\n                handleClick={async () => {\n                  try {\n                    const updatedCart = await addItem(\n                      userID,\n                      frontmatter.productID,\n                      frontmatter.price,\n                      quantity\n                    );\n                    if (updatedCart) {\n                      setShopCart(updatedCart);\n                      setRecentlyAdded(true);\n                    }\n                  } catch (err) {\n                    console.log(err);\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        slug\n        product\n        productID\n        price\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}